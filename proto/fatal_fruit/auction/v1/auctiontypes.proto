syntax = "proto3";
package fatal_fruit.auction.v1;

option go_package = "github.com/fatal-fruit/auction/auctiontypes";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";
import "fatal_fruit/auction/v1/types.proto";

message ReserveAuctionMetadata {
  option (cosmos_proto.implements_interface) = "fatal_fruit.auction.v1.AuctionMetadata";
  option (amino.name)                        = "cosmos-sdk/AuctionMetadata";

  // duration specifies the time duration of the auction.
  google.protobuf.Duration duration = 2
  [(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // start_time and end_time are calculated from the contract duration
  google.protobuf.Timestamp start_time = 7
  [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp end_time = 8
  [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdtime) = true];

  // reserve_price is the minimum price for the auction.
  cosmos.base.v1beta1.Coin reserve_price = 3 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  repeated Bid bids = 9;

  cosmos.base.v1beta1.Coin last_price = 10 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  SettleStrategy strategy = 11;
}

message ReserveAuction {
  option (cosmos_proto.implements_interface) = "fatal_fruit.auction.v1.Auction";
  option (amino.name)                        = "cosmos-sdk/ReserveAuction";

  uint64 id = 1;
  string status = 2;
  string owner = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string auction_type = 4;

  ReserveAuctionMetadata metadata = 5;
}

message SettleStrategy {
  string strategy_type = 1;
  // id of escrow contract for auction
  uint64 escrow_contract_id = 2;
  string escrow_contract_address = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}