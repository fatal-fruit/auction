// Code generated by MockGen. DO NOT EDIT.
// Source: ./types/expected_services.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockEscrowService is a mock of EscrowService interface.
type MockEscrowService struct {
	ctrl     *gomock.Controller
	recorder *MockEscrowServiceMockRecorder
}

// MockEscrowServiceMockRecorder is the mock recorder for MockEscrowService.
type MockEscrowServiceMockRecorder struct {
	mock *MockEscrowService
}

// NewMockEscrowService creates a new mock instance.
func NewMockEscrowService(ctrl *gomock.Controller) *MockEscrowService {
	mock := &MockEscrowService{ctrl: ctrl}
	mock.recorder = &MockEscrowServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEscrowService) EXPECT() *MockEscrowServiceMockRecorder {
	return m.recorder
}

// NewContract mocks base method.
func (m *MockEscrowService) NewContract() (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewContract")
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewContract indicates an expected call of NewContract.
func (mr *MockEscrowServiceMockRecorder) NewContract() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewContract", reflect.TypeOf((*MockEscrowService)(nil).NewContract))
}
